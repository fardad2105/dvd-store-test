/*
 * This file is generated by jOOQ.
*/
package com.mydvdstore.model;


import com.mydvdstore.model.tables.FilmInStock;
import com.mydvdstore.model.tables.FilmNotInStock;
import com.mydvdstore.model.tables.RewardsReport;
import com.mydvdstore.model.tables.records.FilmInStockRecord;
import com.mydvdstore.model.tables.records.FilmNotInStockRecord;
import com.mydvdstore.model.tables.records.RewardsReportRecord;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Result;
import org.jooq.impl.DSL;


/**
 * Convenience access to all stored procedures and functions in public
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

    /**
     * Call <code>public.film_in_stock</code>.
     */
    public static Result<FilmInStockRecord> filmInStock(Configuration configuration, Integer pFilmId, Integer pStoreId) {
        return DSL.using(configuration).selectFrom(com.mydvdstore.model.tables.FilmInStock.FILM_IN_STOCK.call(pFilmId, pStoreId)).fetch();
    }

    /**
     * Get <code>public.film_in_stock</code> as a table.
     */
    public static FilmInStock filmInStock(Integer pFilmId, Integer pStoreId) {
        return com.mydvdstore.model.tables.FilmInStock.FILM_IN_STOCK.call(pFilmId, pStoreId);
    }

    /**
     * Get <code>public.film_in_stock</code> as a table.
     */
    public static FilmInStock filmInStock(Field<Integer> pFilmId, Field<Integer> pStoreId) {
        return com.mydvdstore.model.tables.FilmInStock.FILM_IN_STOCK.call(pFilmId, pStoreId);
    }

    /**
     * Call <code>public.film_not_in_stock</code>.
     */
    public static Result<FilmNotInStockRecord> filmNotInStock(Configuration configuration, Integer pFilmId, Integer pStoreId) {
        return DSL.using(configuration).selectFrom(com.mydvdstore.model.tables.FilmNotInStock.FILM_NOT_IN_STOCK.call(pFilmId, pStoreId)).fetch();
    }

    /**
     * Get <code>public.film_not_in_stock</code> as a table.
     */
    public static FilmNotInStock filmNotInStock(Integer pFilmId, Integer pStoreId) {
        return com.mydvdstore.model.tables.FilmNotInStock.FILM_NOT_IN_STOCK.call(pFilmId, pStoreId);
    }

    /**
     * Get <code>public.film_not_in_stock</code> as a table.
     */
    public static FilmNotInStock filmNotInStock(Field<Integer> pFilmId, Field<Integer> pStoreId) {
        return com.mydvdstore.model.tables.FilmNotInStock.FILM_NOT_IN_STOCK.call(pFilmId, pStoreId);
    }

    /**
     * Call <code>public.rewards_report</code>.
     */
    public static Result<RewardsReportRecord> rewardsReport(Configuration configuration, Integer minMonthlyPurchases, BigDecimal minDollarAmountPurchased) {
        return DSL.using(configuration).selectFrom(com.mydvdstore.model.tables.RewardsReport.REWARDS_REPORT.call(minMonthlyPurchases, minDollarAmountPurchased)).fetch();
    }

    /**
     * Get <code>public.rewards_report</code> as a table.
     */
    public static RewardsReport rewardsReport(Integer minMonthlyPurchases, BigDecimal minDollarAmountPurchased) {
        return com.mydvdstore.model.tables.RewardsReport.REWARDS_REPORT.call(minMonthlyPurchases, minDollarAmountPurchased);
    }

    /**
     * Get <code>public.rewards_report</code> as a table.
     */
    public static RewardsReport rewardsReport(Field<Integer> minMonthlyPurchases, Field<BigDecimal> minDollarAmountPurchased) {
        return com.mydvdstore.model.tables.RewardsReport.REWARDS_REPORT.call(minMonthlyPurchases, minDollarAmountPurchased);
    }
}
